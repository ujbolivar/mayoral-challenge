Mayoral test:

PENDIENTE

	REFACTOR:

	- finish taking a look at components to see where the code can be spruced up
	
	- discount function inside product price useeffect needs to be a pure function and 
	extracted from the component and placed into utils/applyDiscount	
	

	
	TESTS:

		Unit tests - jest / react testing library
			
			- TST APPLY DISCOUNT
			- productImage component renders
			- productPrice component renders
			- search component renders
			- sort component renders and buttons are clickable
	
	- E2E tests - Cypress
	
		Write all the end tests you need.
		
		User Actions: (maybe try with @testing-library/user-events. You need @testing-library/dom for this to work.)
			- Can request the page and have it load
			- Can input tt text into search
			- Can press sort control buttons
			- Can press A単adir button and more colores button
	

	- Integration tests - Cypress
	
		Write all the integration tests you need.
	
			- test api call
			- NavBar component renders
			- ProductCard component renders
			- ProductList component renders	

HECHO

	COMPONENTES:
		create components - DONE
	
		navbar:
			- search component - DONE
			- sort component - DONE
		body:
			- item list - DONE
			- item card - DONE
			- add button - DONE
			- spinner - DONE


	ESTILOS:
	
	- Refactor button conditional rendering directly inside classname attribute - DONE

	- Dependiendo de si asc o desc esta activo, el boton correspondiente tiene que estar un 
	poco mas oscuro, copy it from the button css rule for the .button:active class {}to switch 	
	to grey[500] - DONE

	- si el productos no es de categoria 'electronics' no mostrar 'mas colores' - DONE

	- BUG: Product card dimensions change to fit entire screen when search returns few items. - DONE
	
	- Refactorizar component imagen. - DONE

	- When a discount is applied, the original price has to have a black strikethrough 
	line running accross. -DONE

	- NavBar Mobile view display block with sort on top of search input and a thin grey 
	line dividing the header from the main part of the app. - DONE	
	
	- media containers for ProductsList Component desktop (5 - 4 - 3) mobile (2) grid - DONE

	- A単ade margen lateral dentro del cuerpo entero de la 
	aplicacion

	- Components: Styles all components as they want in the mockup. -DONE

	ACCIONES:
		- API call - DONE		
		- Memoize after api call promise response and static generation - DONE
		- Set revalidate to 1 minute
		- Search over list -DONE
		- Sort list - DONE
		- use sortOrder to apply sort direction on button press -DONE
		- Add useMemo to the set Disocunt function in useEffect -DONE

	REFACTOR:
		- SET THE MOCK PRODUCTS CORRECTLY FOR JEST INSIDE __mocks__ folder - DONE
		- Do not memoize inside the product list? - DONE
		- a単adir and mas colores text to be put inside separate files inside utils with their 
		console.log and imported into product card , stored in constant variables and then be 
		given to the button actions attribute.
	
	TESTS:
	
		- end to end tests
			- test pure functions search and sort - DONE
			- a単adir button renders and is clickable - DONE
			- colores button / hide colores button - DONE